@model CoffeeExperience.MVC.ViewModels.LotViewModel
@{
    Layout = null;
    int i = 0;
    int ProductsCount = Model.ListProduct.Count;
    Model.ListProduct.Add(new CoffeeExperience.MVC.ViewModels.ProductViewModel());
}

<div class="row m-t-md">
    <div class="col-lg-12">
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ListProduct[ProductsCount].Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ListProduct[ProductsCount].Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ListProduct[ProductsCount].Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ListProduct[ProductsCount].Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ListProduct[ProductsCount].Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ListProduct[ProductsCount].Weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-lg-2 pull-right">
                    <button class="btn btn-info col-lg-12" type="submit">Adicionar Produto</button>
                </div>
            </div>
        </div>


        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Nome
                        </th>
                        <th>
                            Peso
                        </th>
                       
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (var item in Model.ListProduct)
                        {
                            if (i != ProductsCount)
                            {
                                <tr>
                                    <td>
                                        @item.Name
                                        @Html.HiddenFor(model => model.ListProduct[i].Name, new { Value = item.Name })
                                    </td>
                                    <td>
                                        @item.Weight
                                        @Html.HiddenFor(model => model.ListProduct[i].Weight, new { Value = item.Weight })
                                    </td>
                                </tr>
                            }
                            i++;
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

