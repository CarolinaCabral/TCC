@model CoffeeExperience.MVC.ViewModels.LotViewModel

@using (Ajax.BeginForm(Model == null || Model.Id == 0 ? "Create" : "Edit", Model == null || Model.Id == 0 ? new AjaxOptions { UpdateTargetId = "ajax-tab-acao-criar-lot" } : new AjaxOptions { UpdateTargetId = "ajax-tab-acao-editar-lot-"+Model.Id }))
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Status)
    @Html.HiddenFor(model => model.UserId)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.Partial("Messages") //Partial renderiza uma View em uma parte da página, essa view é as mensagens de erro e sucesso utilizando a TempData, que é um local no servidor que eu consigo guardar algumas informações

    <div class="form-horizontal">
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Vality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vality, new { htmlAttributes = new { @class = "form-control data" } })
                @Html.ValidationMessageFor(model => model.Vality, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>


    <div class="row">
        <div class="col-md-12">

            <div>
                <div>
                    <div class="row">
                        <div class="col-md-10">
                            <h4>Produtos</h4>
                        </div>
                        <div class="col-md-2 text-right">
                            <button type="submit" name="command:AddProduct" class="btn btn-success cancel margin-top-15" aria-label="Salvar">
                                Adicionar
                            </button>

                        </div>
                    </div>

                </div>
                @if (Model != null && Model.ListProduct != null && Model.ListProduct.Count > 0)
                {

                    <table class="table table-bordered">
                        <tr>
                            <th class="col-md-1">#</th>
                            <th class="col-md-4">
                                @Html.LabelFor(model => model.Product.Name)
                            </th>
                            <th class="col-md-4">
                                @Html.LabelFor(model => model.Product.Weight)
                            </th>
                            <th class="col-md-2">
                                Ações
                            </th>
                        </tr>
                        @for (int i = 0; i < Model.ListProduct.Count; i++)
                        {
                            if (Model.ListProduct[i].Id > 0)
                            {
                                @Html.HiddenFor(model => model.ListProduct[i].Id)
                            }
                            @Html.HiddenFor(model => model.ListProduct[i].Id)
                            @Html.HiddenFor(model => model.ListProduct[i].Name)
                            @Html.HiddenFor(model => model.ListProduct[i].Status)
                            @Html.HiddenFor(model => model.ListProduct[i].LotId)
                            @Html.HiddenFor(model => model.ListProduct[i].Weight)

                            <tr>
                                <td>
                                    @(i + 1)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => model.ListProduct[i].Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => model.ListProduct[i].Weight)
                                </td>
                                <td class="col-md-1">

                                    <button type="submit" name="command:EditProduct;index:@i" class="btn btn-default cancel" aria-label="Editar">
                                        <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                    </button>

                                    @if (Model != null && Model.Id > 0)
                                    {
                                        <button type="submit" name="command:DeleteProduct;index:@i" class="btn btn-default cancel" aria-label="Excluir">
                                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                        </button>
                                    }                                   

                                </td>
                            </tr>
                        }
                    </table>

                }
                else
                {
                    <p>Não existem produtos cadastrados para o lote</p>
                }

            </div>

            <div class="form-group">
                <div class="col-lg-2 pull-right">
                    <button class="btn btn-success col-lg-12" name="command:Salvar" type="submit">Salvar</button>
                </div>
            </div>

        </div>
    </div>

}

@if (Model != null && Model.Product != null)
{
    <div class="modal fade" tabindex="-1" role="dialog" data-show="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Produto</h4>
                </div>
                <div id="div-lots-formproducts" class="modal-body">
                    @Html.Partial("_FormProduct")
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(FecharAlerta());

    $(".data").datepicker({
        dateFormat: 'dd/mm/yy',
        dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
        dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
        dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
        monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
        monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
        nextText: 'Próximo',
        prevText: 'Anterior',
        changeYear: true
    });
  
</script>